name: Build and Release

on:
  push:
    # Match branches like release-v0.1.0 or release-v0.1.0-Alpha
    branches:
      - 'release-v*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract full version from branch name
        # e.g. GITHUB_REF_NAME=release-v0.1.0-Alpha â†’ VERSION=0.1.0-Alpha
        run: |
          echo "VERSION=${GITHUB_REF_NAME#release-v}" >> $GITHUB_ENV

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build fat JAR
        run: ./gradlew generateGrammarSource shadowJar

      - name: Prepare release package
        run: |
          mkdir release
          # Copy & rename your shadow JAR to include the full version
          cp build/libs/minjc-${VERSION}*.jar release/minjc-${VERSION}.jar
          cp -r examples            release/
          cp README.md              release/
          cd release
          zip -r minjc-${VERSION}.zip .

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          # Tag it v0.1.0-Alpha (whatever the branch suffix is)
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/minjc-${{ env.VERSION }}.zip
          asset_name: minjc-${{ env.VERSION }}.zip
          asset_content_type: application/zip

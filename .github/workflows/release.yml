name: Build and Release

permissions:
  contents: write

on:
  push:
    # any branch starting with release-v
    branches:
      - 'release-v*'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract full version from branch name
        run: |
          # e.g. branch=release-v0.1.0-Alpha â†’ VERSION=0.1.0-Alpha
          echo "VERSION=${GITHUB_REF_NAME#release-v}" >> $GITHUB_ENV

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      - name: Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

      - name: Build fat JAR
        run: ./gradlew generateGrammarSource shadowJar

      - name: Prepare release package
        run: |
          mkdir release
          # pick up whichever JAR was built and rename it
          JAR=$(ls build/libs/*.jar | head -n1)
          cp "$JAR" "release/minjc-${VERSION}.jar"
          cp -r examples        release/
          cp README.md          release/
          cd release
          zip -r "minjc-${VERSION}.zip" .

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          draft: false
          prerelease: false

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release/minjc-${{ env.VERSION }}.zip
          asset_name: minjc-${{ env.VERSION }}.zip
          asset_content_type: application/zip
